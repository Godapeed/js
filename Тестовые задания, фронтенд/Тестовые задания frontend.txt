JavaScript

1. В чем разница между null и undefined?

null - специальный указатель на то, что данный объект не имеет значения.
undefined - показатель на то что объект не имеет значения/не найден, показатель что нельзя однозначно сказать,
что это изначально так задумывалось программистом.
(их разделили чтобы было проще разделять ошибочные ситуации и задуманные?)

2. Почему вывод в консоль obj.someprop.x приводит к ошибке?

const obj = {};
console.log(obj.someprop.x);

Так как x underfined.

3. Как проверить, является ли значение массивом?

Array.isArray(x)

4. Проверить, является ли целое число квадратом, не используя математические функции.

Через множественные if. Квадрат числа не может быть отрицательным, 0,1 - квадраты, дальше перемножаем числа 
счетчика от 2 до примерно половины этого числа и если квадрат счетчика сошелся с числом, то это квадрат.

5. Написать функцию, которая принимает в качестве аргумента строку и возвращает значение true, 
если строка является палиндромом, и false, если это не так. При решении задачи необходимо учитывать 
пробелы и знаки препинания, регистр символов в заданной строке не учитывать.

Палиндром — это слово, предложение или последовательность символов, которая читается слева направо так же, 
как и справа налево. Например, «racecar» и «Anna» являются палиндромами, а «Table» и «John» — нет.

Пример:

palindrome('racecar')  вернет true
palindrome('Table')  вернет false

function palindrome(str) {
    s = str.split("").reverse().join("");;
    if (s == str) {
        return true;
    }
    else {
        return false;
    }
}


6. Напишите функцию, которая возвращает n-ую запись в последовательности Фибоначчи, где n — это число, 
которое вы передаёте в качестве аргумента функции.

Числа Фибоначчи - элементы числовой последовательности, в которой первые два числа равны 0 и 1, а каждое 
последующее число равно сумме двух предыдущих чисел.

Пример:

fibonacci(3)  вернет 2

function fibonacci(i) {
    if (i < 2) {
        switch(i) {
            case 1: return 1;
            case 0: return 0;
        }
    }
    else {
        return fibonacci(i-1)+fibonacci(i-2);
    }
}

7. Попробуйте проанализировать, что делает следующий код.

const nums = [0, 39, 28, 34, 1, 3, 6, 8, 4, 72, 7];

nums.forEach(num => {
	setTimeout(() => {console.log(num)}, num);
});

Данный код выводит элементы массива nums в консоль с задержкой, 
которая соответствует значению каждого элемента.



Для выполнения следующих заданий используйте файл "HTML документ.html" либо в текстовом виде, либо открыв его в
 браузере.

JQuery

1. Выбрать элемент с атрибутом id="rootID" и добавить класс "rootClass"

2. Выбрать все дочерние элементы с атрибутом class="someClassName" у элемента с атрибутом id="rootID" на первом
 уровне вложенности

3. Выбрать все дочерние элементы с атрибутом class="someClassName" у элемента с атрибутом id="rootID" на любом
 уровне вложенности

4. Выбрать элементы с атрибутом class="someClassName" и аттрибутом oid = "newDoc"

5. Выбрать последний дочерний элемент с атрибутом class="someClassName" у элемента с атрибутом id="rootID" и
 заменить текст в параграфе (p) на "Последняя строка"


Задачи повышенной сложности:

Сверстать простой HTML-документ (HTML, CSS, JS), содержащий в себе header, footer и произвольную статью.
 Стилистическое оформление на свой вкус. Дополнительные составляющие документа приветствуются :) 
 (навигационное меню, боковая панель и т.д.).

Если есть опыт или желание использовать какие то JS-производные библиотеки - JQuery, ReactJS, VueJS - 
это не возбраняется )

Дальше - больше ))

Можно поднять сервер на Nodejs, сделать сайт на основе своего HTML документа.
Можно опубликовать свой проект на https://github.com/

Если какие-то пункты вызывают затруднения, сделайте что можете или успеваете.